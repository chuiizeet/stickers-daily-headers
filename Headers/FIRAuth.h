//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FIRAuthInterop-Protocol.h"
#import "FIRComponentLifecycleMaintainer-Protocol.h"
#import "FIRLibrary-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"

@class FIRApp, FIRAuthAPNSTokenManager, FIRAuthAppCredentialManager, FIRAuthKeychainServices, FIRAuthNotificationManager, FIRAuthRequestConfiguration, FIRAuthSettings, FIRAuthStoredUserManager, FIRAuthURLPresenter, FIRUser, NSData, NSMutableArray, NSString, UIWindow;
@protocol NSObject;

@interface FIRAuth : NSObject <UIApplicationDelegate, FIRLibrary, FIRComponentLifecycleMaintainer, FIRAuthInterop>
{
    FIRUser *_currentUser;
    NSString *_firebaseAppName;
    NSMutableArray *_listenerHandles;
    FIRAuthKeychainServices *_keychainServices;
    NSString *_lastNotifiedUserToken;
    _Bool _autoRefreshTokens;
    _Bool _autoRefreshScheduled;
    _Bool _isAppInBackground;
    id <NSObject> _applicationDidBecomeActiveObserver;
    id <NSObject> _applicationDidEnterBackgroundObserver;
    FIRApp *_app;
    FIRAuthSettings *_settings;
    NSString *_userAccessGroup;
    NSData *_APNSToken;
    NSString *_firebaseAppId;
    FIRAuthStoredUserManager *_storedUserManager;
    FIRAuthRequestConfiguration *_requestConfiguration;
    FIRAuthAPNSTokenManager *_tokenManager;
    FIRAuthAppCredentialManager *_appCredentialManager;
    FIRAuthNotificationManager *_notificationManager;
    FIRAuthURLPresenter *_authURLPresenter;
}

+ (void)configureWithApp:(id)arg1;
+ (id)componentsToRegister;
+ (void)deleteKeychainServiceNameForAppName:(id)arg1;
+ (id)keychainServiceNameForAppName:(id)arg1;
+ (void)setKeychainServiceNameForApp:(id)arg1;
+ (id)authWithApp:(id)arg1;
+ (id)auth;
+ (void)initialize;
+ (void)load;
@property(readonly, nonatomic) FIRAuthURLPresenter *authURLPresenter; // @synthesize authURLPresenter=_authURLPresenter;
@property(readonly, nonatomic) FIRAuthNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(readonly, nonatomic) FIRAuthAppCredentialManager *appCredentialManager; // @synthesize appCredentialManager=_appCredentialManager;
@property(readonly, nonatomic) FIRAuthAPNSTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(readonly, copy, nonatomic) FIRAuthRequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
@property(retain, nonatomic) FIRAuthStoredUserManager *storedUserManager; // @synthesize storedUserManager=_storedUserManager;
@property(readonly, copy, nonatomic) NSString *firebaseAppId; // @synthesize firebaseAppId=_firebaseAppId;
@property(retain, nonatomic) NSData *APNSToken; // @synthesize APNSToken=_APNSToken;
@property(readonly, copy, nonatomic) NSString *userAccessGroup; // @synthesize userAccessGroup=_userAccessGroup;
@property(copy, nonatomic) FIRAuthSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) __weak FIRApp *app; // @synthesize app=_app;
- (void).cxx_destruct;
- (id)getStoredUserForAccessGroup:(id)arg1 error:(id *)arg2;
- (_Bool)useUserAccessGroup:(id)arg1 error:(id *)arg2;
- (id)getUserID;
- (void)getTokenForcingRefresh:(_Bool)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)appWillBeDeleted:(id)arg1;
- (_Bool)getUser:(id *)arg1 error:(id *)arg2;
- (_Bool)saveUser:(id)arg1 error:(id *)arg2;
- (_Bool)updateCurrentUser:(id)arg1 byForce:(_Bool)arg2 savingToDisk:(_Bool)arg3 error:(id *)arg4;
- (CDUnknownBlockType)signInFlowAuthDataResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)signInFlowAuthResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (void)completeSignInWithAccessToken:(id)arg1 accessTokenExpirationDate:(id)arg2 refreshToken:(id)arg3 anonymous:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)scheduleAutoTokenRefreshWithDelay:(double)arg1 retry:(_Bool)arg2;
- (void)scheduleAutoTokenRefresh;
- (_Bool)updateKeychainWithUser:(id)arg1 error:(id *)arg2;
- (void)possiblyPostAuthStateChangeNotification;
- (void)internalSignInAnonymouslyWithCompletion:(CDUnknownBlockType)arg1;
- (void)internalCreateUserWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)internalSignInAndRetrieveDataWithCustomToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithPhoneCredential:(id)arg1 operation:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)canHandleURL:(id)arg1;
- (_Bool)canHandleNotification:(id)arg1;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
@property(copy, nonatomic) NSString *additionalFrameworkMarker;
@property(copy, nonatomic) NSString *languageCode;
- (void)useAppLanguage;
- (void)removeIDTokenDidChangeListener:(id)arg1;
- (id)addIDTokenDidChangeListener:(CDUnknownBlockType)arg1;
- (void)removeAuthStateDidChangeListener:(id)arg1;
- (id)addAuthStateDidChangeListener:(CDUnknownBlockType)arg1;
- (_Bool)isSignInWithEmailLink:(id)arg1;
- (_Bool)signOutByForceWithUserID:(id)arg1 error:(id *)arg2;
- (_Bool)signOut:(id *)arg1;
- (void)updateCurrentUser:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendSignInLinkToEmail:(id)arg1 actionCodeSettings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithNullableActionCodeSettings:(id)arg1 email:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 actionCodeSettings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applyActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifyPasswordResetCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)confirmPasswordResetWithCode:(id)arg1 newPassword:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createUserWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithCustomToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInAnonymouslyWithCompletion:(CDUnknownBlockType)arg1;
- (void)internalSignInAndRetrieveDataWithCredential:(id)arg1 isReauthentication:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)internalSignInWithCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)signInAndRetrieveDataWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)internalSignInAndRetrieveDataWithEmail:(id)arg1 link:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signInAndRetrieveDataWithGameCenterCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)internalSignInAndRetrieveDataWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 link:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchSignInMethodsForEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithProvider:(id)arg1 UIDelegate:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchProvidersForEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) FIRUser *currentUser;
- (void)dealloc;
- (id)initWithAPIKey:(id)arg1 appName:(id)arg2;
- (id)initWithApp:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end


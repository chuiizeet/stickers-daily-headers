//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSError, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AppendOnlyList<firebase::firestore::core::Filter> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> contents_;
    unsigned long long size_;
};

struct AppendOnlyList<firebase::firestore::core::OrderBy> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> contents_;
    unsigned long long size_;
};

struct ArraySortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>>> array_;
    struct ById comparator_;
};

struct ArraySortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>>> array_;
    struct ByKey comparator_;
};

struct ArraySortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>>> array_;
    struct DocumentComparator comparator_;
};

struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>>> array_;
    struct Comparator<firebase::firestore::model::DocumentKey> comparator_;
};

struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> array_;
    struct Comparator<firebase::firestore::model::DocumentKey> comparator_;
};

struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>> _field1;
    struct Comparator<std::__1::basic_string<char>> _field2;
};

struct AsyncEventListener<firebase::firestore::core::ViewSnapshot>;

struct AsyncQueue;

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct BaseValue;

struct Bound {
    vector_51b5b3c0 _field1;
    _Bool _field2;
};

struct ById;

struct ByKey;

struct ByteString {
    struct pb_bytes_array_s *bytes_;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CollectionReference {
    shared_ptr_e3fec009 _field1;
    Query_9db663f1 _field2;
};

struct Comparator<firebase::firestore::model::DocumentKey>;

struct Comparator<std::__1::basic_string<char>>;

struct CredentialsProvider;

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct DatabaseId {
    struct shared_ptr<const firebase::firestore::model::DatabaseId::Rep> rep_;
};

struct DatabaseInfo {
    struct DatabaseId _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    _Bool _field4;
};

struct Datastore;

struct DelayedConstructor<firebase::firestore::api::ListenerRegistration> {
    union Space {
        char empty;
        struct ListenerRegistration value;
    } space_;
};

struct DelayedConstructor<firebase::firestore::api::QuerySnapshot> {
    union Space {
        char empty;
        struct QuerySnapshot value;
    } space_;
};

struct DelayedConstructor<firebase::firestore::api::WriteBatch> {
    union Space {
        char empty;
        struct WriteBatch value;
    } space_;
};

struct DelayedConstructor<firebase::firestore::core::View> {
    union Space {
        char empty;
        struct View value;
    } space_;
};

struct DelayedOperation {
    struct function<void ()> _field1;
};

struct Direction {
    int _field1;
};

struct Document {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> rep_;
};

struct DocumentChange {
    int type_;
    struct DocumentSnapshot document_;
    unsigned long long old_index_;
    unsigned long long new_index_;
};

struct DocumentComparator {
    struct function<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> function_;
};

struct DocumentKey {
    struct shared_ptr<const firebase::firestore::model::ResourcePath> path_;
};

struct DocumentMap {
    SortedMap_4bc8f18e map_;
};

struct DocumentReference {
    shared_ptr_e3fec009 firestore_;
    struct DocumentKey key_;
};

struct DocumentSet {
    struct DocumentMap index_;
    struct SortedSet<firebase::firestore::model::Document, firebase::firestore::model::DocumentComparator, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator>> sorted_set_;
};

struct DocumentSnapshot {
    shared_ptr_e3fec009 firestore_;
    struct DocumentKey internal_key_;
    optional_0ae1c4d0 internal_document_;
    struct SnapshotMetadata metadata_;
};

struct DocumentViewChange;

struct Dummy;

struct EventListener<firebase::firestore::api::DocumentSnapshot>;

struct EventListener<firebase::firestore::api::QuerySnapshot>;

struct FBAdDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBAdSize {
    struct CGSize size;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    long long _field4;
    CDStruct_1b6d18a9 _field5;
    unsigned int _field6;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
    float rotationAngle;
};

struct FNFMP4TrakAtomForSeek;

struct FNFPlayerInternalState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    _Bool isReadyForDisplay;
    _Bool previousSeekCompletionBlockExecuted;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 lastRequestedStartTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    float lastPlayRate;
    float playRate;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id seekFrameUpdateObserver;
    id sampleBufferFlushTimerObserver;
    id levelMeterTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
    NSString *representationId;
    unsigned long long lastFrameSeekAttempt;
    long long status;
    struct FNFPlayerStallState stallState;
    struct CGRect bounds;
    CDUnknownBlockType frameSeekCompletionBlock;
    NSError *playerItemWarning;
    NSError *playerItemError;
    NSArray *playerItemLoadedTimeRanges;
    CDStruct_1b6d18a9 playerItemDuration;
};

struct FNFPlayerStallState {
    _Bool isStalled;
    _Bool isStartStall;
    unsigned long long stallTimeInMilliseconds;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct FSTTransactionRunner {
    id _db;
    _Bool _expect_db;
};

struct FieldFilter {
    struct shared_ptr<const firebase::firestore::core::Filter::Rep> _field1;
};

struct FieldMask {
    struct set<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> _field1;
};

struct FieldPath {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> segments_;
};

struct FieldTransform {
    struct FieldPath _field1;
    struct TransformOperation _field2;
};

struct FieldValue {
    struct shared_ptr<firebase::firestore::model::FieldValue::BaseValue> _field1;
};

struct FieldValueOptions {
    int _field1;
    _Bool _field2;
};

struct Firestore;

struct FirestoreClient;

struct FixedArray<std::__1::pair<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>>;

struct FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>>;

struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>>;

struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>;

struct FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>;

struct GADAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GeoPoint {
    double _field1;
    double _field2;
};

struct IndexManager {
    CDUnknownFunctionPointerType *_field1;
};

struct LevelDbIndexManager;

struct LevelDbMutationQueue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    basic_string_90719d97 _field4;
    int _field5;
    id _field6;
};

struct LevelDbQueryCache {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    id _field4;
    struct SnapshotVersion _field5;
};

struct LevelDbRemoteDocumentCache;

struct LevelDbTransaction {
    struct DB *_field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
    set_0cfa92bf _field3;
    struct ReadOptions _field4;
    struct WriteOptions _field5;
    int _field6;
    basic_string_90719d97 _field7;
};

struct LimboDocumentChange {
    int _field1;
    struct DocumentKey _field2;
};

struct ListenOptions {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct ListenSequence;

struct ListenerRegistration {
    struct shared_ptr<firebase::firestore::core::FirestoreClient> client_;
    struct weak_ptr<firebase::firestore::core::AsyncEventListener<firebase::firestore::core::ViewSnapshot>> async_listener_;
    struct weak_ptr<firebase::firestore::core::QueryListener> query_listener_;
};

struct LlrbNode<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>::Rep> rep_;
};

struct LlrbNode<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>::Rep> rep_;
};

struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>::Rep> rep_;
};

struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>::Rep> rep_;
};

struct LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>::Rep> _field1;
};

struct LocalDocumentsView;

struct LocalViewChanges;

struct LocalWriteResult {
    int _field1;
    SortedMap_4bc8f18e _field2;
};

struct LruDelegate;

struct LruDelegateBridge {
    CDUnknownFunctionPointerType *_vptr$LruDelegate;
    id target_;
};

struct LruGarbageCollector {
    struct LruDelegate *_field1;
    struct LruParams _field2;
};

struct LruParams {
    long long _field1;
    int _field2;
    int _field3;
};

struct LruResults {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct MaybeDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct MemoryCollectionParentIndex {
    struct unordered_map<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>>> index_;
};

struct MemoryIndexManager {
    CDUnknownFunctionPointerType *_vptr$IndexManager;
    struct MemoryCollectionParentIndex collection_parents_index_;
};

struct MemoryMutationQueue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<firebase::firestore::model::MutationBatch, std::__1::allocator<firebase::firestore::model::MutationBatch>> _field3;
    int _field4;
    struct ByteString _field5;
    struct SortedSet<firebase::firestore::local::DocumentKeyReference, firebase::firestore::local::DocumentKeyReference::ByKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey>> _field6;
};

struct MemoryQueryCache {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    long long _field3;
    int _field4;
    struct SnapshotVersion _field5;
    struct unordered_map<firebase::firestore::core::Query, firebase::firestore::local::QueryData, std::__1::hash<firebase::firestore::core::Query>, std::__1::equal_to<firebase::firestore::core::Query>, std::__1::allocator<std::__1::pair<const firebase::firestore::core::Query, firebase::firestore::local::QueryData>>> _field6;
    struct ReferenceSet _field7;
};

struct MemoryRemoteDocumentCache {
    CDUnknownFunctionPointerType *_field1;
    SortedMap_4bc8f18e _field2;
    id _field3;
};

struct Mutation {
    struct shared_ptr<firebase::firestore::model::Mutation::Rep> _field1;
};

struct MutationBatch {
    int _field1;
    struct Timestamp _field2;
    vector_ea6b9d7e _field3;
    vector_ea6b9d7e _field4;
};

struct MutationBatchResult {
    struct MutationBatch _field1;
    struct SnapshotVersion _field2;
    struct vector<firebase::firestore::model::MutationResult, std::__1::allocator<firebase::firestore::model::MutationResult>> _field3;
    struct ByteString _field4;
    struct unordered_map<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>>> _field5;
};

struct MutationQueue {
    CDUnknownFunctionPointerType *_field1;
};

struct MutationResult {
    struct SnapshotVersion _field1;
    struct optional<const std::__1::vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>>> _field2;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NoDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct ObjectValue {
    struct FieldValue _field1;
};

struct OnlineStateTracker {
    int _field1;
    int _field2;
    struct DelayedOperation _field3;
    _Bool _field4;
    shared_ptr_ada94aa4 _field5;
    struct function<void (firebase::firestore::model::OnlineState)> _field6;
};

struct OrderBy {
    struct FieldPath _field1;
    struct Direction _field2;
};

struct ParseAccumulator;

struct ParseContext {
    struct ParseAccumulator *_field1;
    struct unique_ptr<firebase::firestore::model::FieldPath, std::__1::default_delete<firebase::firestore::model::FieldPath>> _field2;
    _Bool _field3;
};

struct ParsedSetData {
    struct ObjectValue _field1;
    struct FieldMask _field2;
    vector_974658d4 _field3;
    _Bool _field4;
};

struct ParsedUpdateData {
    struct ObjectValue _field1;
    struct FieldMask _field2;
    vector_974658d4 _field3;
};

struct Path {
    basic_string_90719d97 pathname_;
};

struct Precondition {
    int _field1;
    struct SnapshotVersion _field2;
    _Bool _field3;
};

struct QueryCache {
    CDUnknownFunctionPointerType *_field1;
};

struct QueryData {
    Query_9db663f1 _field1;
    int _field2;
    long long _field3;
    int _field4;
    struct SnapshotVersion _field5;
    struct ByteString _field6;
};

struct QueryListener;

struct QuerySnapshot {
    shared_ptr_e3fec009 firestore_;
    Query_9db663f1 internal_query_;
    struct ViewSnapshot snapshot_;
    struct SnapshotMetadata metadata_;
};

struct ReadOptions {
    _Bool _field1;
    _Bool _field2;
    struct Snapshot *_field3;
};

struct ReferenceSet {
    struct SortedSet<firebase::firestore::local::DocumentKeyReference, firebase::firestore::local::DocumentKeyReference::ByKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey>> by_key_;
    struct SortedSet<firebase::firestore::local::DocumentKeyReference, firebase::firestore::local::DocumentKeyReference::ById, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById>> by_id_;
};

struct RemoteDocumentCache {
    CDUnknownFunctionPointerType *_field1;
};

struct RemoteEvent {
    struct SnapshotVersion _field1;
    struct unordered_map<int, firebase::firestore::remote::TargetChange, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, firebase::firestore::remote::TargetChange>>> _field2;
    struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> _field3;
    struct unordered_map<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> _field4;
    SortedSet_8472c2f7 _field5;
};

struct RemoteStore {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    id _field4;
    id _field5;
    struct shared_ptr<firebase::firestore::remote::Datastore> _field6;
    struct unordered_map<int, firebase::firestore::local::QueryData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, firebase::firestore::local::QueryData>>> _field7;
    struct OnlineStateTracker _field8;
    _Bool _field9;
    struct shared_ptr<firebase::firestore::remote::WatchStream> _field10;
    struct shared_ptr<firebase::firestore::remote::WriteStream> _field11;
    struct unique_ptr<firebase::firestore::remote::WatchChangeAggregator, std::__1::default_delete<firebase::firestore::remote::WatchChangeAggregator>> _field12;
    struct vector<firebase::firestore::model::MutationBatch, std::__1::allocator<firebase::firestore::model::MutationBatch>> _field13;
};

struct Rep;

struct ResourcePath {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> segments_;
};

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct Settings {
    basic_string_90719d97 _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
};

struct Snapshot;

struct SnapshotMetadata {
    _Bool pending_writes_;
    _Bool from_cache_;
};

struct SnapshotVersion {
    struct Timestamp _field1;
};

struct SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> array_;
        struct TreeSortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> tree_;
    } ;
};

struct SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> array_;
        struct TreeSortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> tree_;
    } ;
};

struct SortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> array_;
        struct TreeSortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> tree_;
    } ;
};

struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> array_;
        struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> tree_;
    } ;
};

struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> array_;
        struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> tree_;
    } ;
};

struct SortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    int _field1;
    union {
        struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field1;
        struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field2;
    } _field2;
};

struct SortedSet<firebase::firestore::local::DocumentKeyReference, firebase::firestore::local::DocumentKeyReference::ById, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById>> {
    struct SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> map_;
};

struct SortedSet<firebase::firestore::local::DocumentKeyReference, firebase::firestore::local::DocumentKeyReference::ByKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey>> {
    struct SortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> map_;
};

struct SortedSet<firebase::firestore::model::Document, firebase::firestore::model::DocumentComparator, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator>> {
    struct SortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> map_;
};

struct SortedSet<firebase::firestore::model::DocumentKey, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>>> {
    struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> map_;
};

struct State;

struct Status {
    struct unique_ptr<firebase::firestore::util::Status::State, std::__1::default_delete<firebase::firestore::util::Status::State>> _field1;
};

struct StatusOr<std::__1::unique_ptr<leveldb::DB, std::__1::default_delete<leveldb::DB>>> {
    union {
        struct Status _field1;
    } _field1;
    union {
        struct Dummy _field1;
        unique_ptr_b0135d45 _field2;
    } _field2;
};

struct SyncEngineCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct TargetChange {
    struct ByteString _field1;
    _Bool _field2;
    SortedSet_8472c2f7 _field3;
    SortedSet_8472c2f7 _field4;
    SortedSet_8472c2f7 _field5;
};

struct TargetIdGenerator {
    int generator_id_;
    int next_id_;
};

struct Timestamp {
    long long _field1;
    int _field2;
};

struct Transaction;

struct TransformOperation {
    struct shared_ptr<const firebase::firestore::model::TransformOperation::Rep> _field1;
};

struct TreeSortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ById> {
    struct LlrbNode<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty> root_;
};

struct TreeSortedMap<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty, firebase::firestore::local::DocumentKeyReference::ByKey> {
    struct LlrbNode<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty> root_;
};

struct TreeSortedMap<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty, firebase::firestore::model::DocumentComparator> {
    struct DocumentComparator value_;
    struct LlrbNode<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty> root_;
};

struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty> root_;
};

struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument> root_;
};

struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    struct LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue> _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UnknownDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct User {
    basic_string_90719d97 uid_;
    _Bool is_authenticated_;
};

struct View {
    Query_9db663f1 query_;
    struct DocumentSet document_set_;
    SortedSet_8472c2f7 synced_documents_;
    SortedSet_8472c2f7 limbo_documents_;
    SortedSet_8472c2f7 mutated_keys_;
    int sync_state_;
    _Bool current_;
};

struct ViewSnapshot {
    Query_9db663f1 query_;
    struct DocumentSet documents_;
    struct DocumentSet old_documents_;
    struct vector<firebase::firestore::core::DocumentViewChange, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> document_changes_;
    SortedSet_8472c2f7 mutated_keys_;
    _Bool from_cache_;
    _Bool sync_state_changed_;
    _Bool excludes_metadata_changes_;
};

struct WatchChange;

struct WatchChangeAggregator;

struct WatchStream;

struct WriteBatch {
    shared_ptr_e3fec009 firestore_;
    vector_ea6b9d7e mutations_;
    _Bool committed_;
};

struct WriteOptions {
    _Bool _field1;
};

struct WriteStream;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<int, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<int, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _logs_proto_mobilesdk_ios_ICoreConfiguration {
    _Bool has_configuration_type;
    int configuration_type;
    struct pb_bytes_array_s *version_name;
    _Bool has_build_number;
    long long build_number;
    _Bool has_build_type;
    int build_type;
    struct pb_bytes_array_s *plist_version;
    unsigned int sdk_service_enabled_count;
    int *sdk_service_enabled;
    unsigned int sdk_service_installed_count;
    int *sdk_service_installed;
    struct pb_bytes_array_s *device_model;
    struct pb_bytes_array_s *app_id;
    _Bool has_project_number;
    long long project_number;
    struct pb_bytes_array_s *bundle_id;
    struct pb_bytes_array_s *client_id;
    struct pb_bytes_array_s *install;
    _Bool has_pod_name;
    int pod_name;
    struct pb_bytes_array_s *icore_version;
    struct pb_bytes_array_s *sdk_version;
    _Bool has_sdk_name;
    int sdk_name;
    _Bool has_app_count;
    int app_count;
    struct pb_bytes_array_s *os_version;
    struct pb_bytes_array_s *itunes_id;
    struct pb_bytes_array_s *min_supported_ios_version;
    _Bool has_use_default_app;
    _Bool use_default_app;
    _Bool has_deployed_in_app_store;
    _Bool deployed_in_app_store;
    _Bool has_dynamic_framework_count;
    int dynamic_framework_count;
    struct pb_bytes_array_s *apple_framework_version;
    _Bool has_using_zip_file;
    _Bool using_zip_file;
    _Bool has_deployment_type;
    int deployment_type;
    struct pb_bytes_array_s *platform_info;
    _Bool has_app_extensions;
    long long app_extensions;
    _Bool has_swizzling_enabled;
    _Bool swizzling_enabled;
    _Bool has_log_error_count;
    int log_error_count;
    _Bool has_log_warning_count;
    int log_warning_count;
    _Bool has_using_gdt;
    _Bool using_gdt;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct dummy_type {
    struct empty_struct data[16];
};

struct empty_struct;

struct function<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> {
    struct type __buf_;
    struct __base<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> *__f_;
};

struct function<void ()> {
    struct type _field1;
    struct __base<void ()> *_field2;
};

struct function<void (_xmlNode *)> {
    struct type _field1;
    struct __base<void (_xmlNode *)> *_field2;
};

struct function<void (const firebase::firestore::model::DocumentKey &, long long)> {
    struct type _field1;
    struct __base<void (const firebase::firestore::model::DocumentKey &, long long)> *_field2;
};

struct function<void (firebase::firestore::model::OnlineState)> {
    struct type _field1;
    struct __base<void (firebase::firestore::model::OnlineState)> *_field2;
};

struct function<void (firebase::firestore::util::Status)> {
    struct type _field1;
    struct __base<void (firebase::firestore::util::Status)> *_field2;
};

struct function<void (firebase::firestore::util::StatusOr<absl::any>)> {
    struct type _field1;
    struct __base<void (firebase::firestore::util::StatusOr<absl::any>)> *_field2;
};

struct function<void (std::__1::shared_ptr<firebase::firestore::core::Transaction>, std::__1::function<void (firebase::firestore::util::StatusOr<absl::any>)>)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<firebase::firestore::core::Transaction>, std::__1::function<void (firebase::firestore::util::StatusOr<absl::any>)>)> *_field2;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<firebase::firestore::model::DocumentKey, int, std::__1::less<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, int>>> {
    struct __tree<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::__map_value_compare<firebase::firestore::model::DocumentKey, std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::less<firebase::firestore::model::DocumentKey>, true>, std::__1::allocator<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<firebase::firestore::model::DocumentKey, std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::less<firebase::firestore::model::DocumentKey>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, LimboResolution, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, LimboResolution>>> {
    struct __tree<std::__1::__value_type<int, LimboResolution>, std::__1::__map_value_compare<int, std::__1::__value_type<int, LimboResolution>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, LimboResolution>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, LimboResolution>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, LimboResolution>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct node {
    struct _xmlNode *_field1;
    struct function<void (_xmlNode *)> _field2;
};

struct optional<const std::__1::vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>>> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        vector_51b5b3c0 _field2;
    } _field2;
};

struct optional<firebase::firestore::model::Document> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct Document data_;
    } ;
};

struct optional<firebase::firestore::model::FieldValue> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct FieldValue _field2;
    } _field2;
};

struct optional<firebase::firestore::model::MaybeDocument> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct MaybeDocument _field2;
    } _field2;
};

struct optional<firebase::firestore::model::MutationBatch> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct MutationBatch _field2;
    } _field2;
};

struct optional<firebase::firestore::remote::RemoteEvent> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RemoteEvent _field2;
    } _field2;
};

struct pair<double, double>;

struct pb_bytes_array_s;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct set<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> {
    struct __tree<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<firebase::firestore::model::FieldPath, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<firebase::firestore::model::FieldPath>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<const firebase::firestore::core::Filter::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>> {
    struct FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const firebase::firestore::model::DatabaseId::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::ResourcePath> {
    struct ResourcePath *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::TransformOperation::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const std::__1::basic_string<char>> {
    basic_string_90719d97 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::api::Firestore> {
    struct Firestore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::auth::CredentialsProvider> {
    struct CredentialsProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::core::Bound> {
    struct Bound *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::core::FirestoreClient> {
    struct FirestoreClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::core::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::local::DocumentKeyReference, firebase::firestore::immutable::impl::Empty>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::Document, firebase::firestore::immutable::impl::Empty>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::model::FieldValue::BaseValue> {
    struct BaseValue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::model::Mutation::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::remote::Datastore> {
    struct Datastore *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::remote::WatchStream> {
    struct WatchStream *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::remote::WriteStream> {
    struct WriteStream *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::util::AsyncQueue> {
    struct AsyncQueue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> {
    struct vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> {
    struct vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct string_view {
    char *_field1;
    unsigned long long _field2;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
        struct EventListener<firebase::firestore::api::DocumentSnapshot> *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
        struct EventListener<firebase::firestore::api::QuerySnapshot> *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::local::LevelDbIndexManager, std::__1::default_delete<firebase::firestore::local::LevelDbIndexManager>> {
    struct __compressed_pair<firebase::firestore::local::LevelDbIndexManager *, std::__1::default_delete<firebase::firestore::local::LevelDbIndexManager>> {
        struct LevelDbIndexManager *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LevelDbMutationQueue, std::__1::default_delete<firebase::firestore::local::LevelDbMutationQueue>> {
    struct __compressed_pair<firebase::firestore::local::LevelDbMutationQueue *, std::__1::default_delete<firebase::firestore::local::LevelDbMutationQueue>> {
        struct LevelDbMutationQueue *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LevelDbQueryCache, std::__1::default_delete<firebase::firestore::local::LevelDbQueryCache>> {
    struct __compressed_pair<firebase::firestore::local::LevelDbQueryCache *, std::__1::default_delete<firebase::firestore::local::LevelDbQueryCache>> {
        struct LevelDbQueryCache *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LevelDbRemoteDocumentCache, std::__1::default_delete<firebase::firestore::local::LevelDbRemoteDocumentCache>> {
    struct __compressed_pair<firebase::firestore::local::LevelDbRemoteDocumentCache *, std::__1::default_delete<firebase::firestore::local::LevelDbRemoteDocumentCache>> {
        struct LevelDbRemoteDocumentCache *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LevelDbTransaction, std::__1::default_delete<firebase::firestore::local::LevelDbTransaction>> {
    struct __compressed_pair<firebase::firestore::local::LevelDbTransaction *, std::__1::default_delete<firebase::firestore::local::LevelDbTransaction>> {
        struct LevelDbTransaction *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::ListenSequence, std::__1::default_delete<firebase::firestore::local::ListenSequence>> {
    struct __compressed_pair<firebase::firestore::local::ListenSequence *, std::__1::default_delete<firebase::firestore::local::ListenSequence>> {
        struct ListenSequence *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LocalDocumentsView, std::__1::default_delete<firebase::firestore::local::LocalDocumentsView>> {
    struct __compressed_pair<firebase::firestore::local::LocalDocumentsView *, std::__1::default_delete<firebase::firestore::local::LocalDocumentsView>> {
        struct LocalDocumentsView *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::LruGarbageCollector, std::__1::default_delete<firebase::firestore::local::LruGarbageCollector>> {
    struct __compressed_pair<firebase::firestore::local::LruGarbageCollector *, std::__1::default_delete<firebase::firestore::local::LruGarbageCollector>> {
        struct LruGarbageCollector *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::MemoryQueryCache, std::__1::default_delete<firebase::firestore::local::MemoryQueryCache>> {
    struct __compressed_pair<firebase::firestore::local::MemoryQueryCache *, std::__1::default_delete<firebase::firestore::local::MemoryQueryCache>> {
        struct MemoryQueryCache *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::local::MemoryRemoteDocumentCache, std::__1::default_delete<firebase::firestore::local::MemoryRemoteDocumentCache>> {
    struct __compressed_pair<firebase::firestore::local::MemoryRemoteDocumentCache *, std::__1::default_delete<firebase::firestore::local::MemoryRemoteDocumentCache>> {
        struct MemoryRemoteDocumentCache *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::model::FieldPath, std::__1::default_delete<firebase::firestore::model::FieldPath>> {
    struct __compressed_pair<firebase::firestore::model::FieldPath *, std::__1::default_delete<firebase::firestore::model::FieldPath>> {
        struct FieldPath *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::remote::WatchChange, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
    struct __compressed_pair<firebase::firestore::remote::WatchChange *, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
        struct WatchChange *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::remote::WatchChangeAggregator, std::__1::default_delete<firebase::firestore::remote::WatchChangeAggregator>> {
    struct __compressed_pair<firebase::firestore::remote::WatchChangeAggregator *, std::__1::default_delete<firebase::firestore::remote::WatchChangeAggregator>> {
        struct WatchChangeAggregator *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::util::Status::State, std::__1::default_delete<firebase::firestore::util::Status::State>> {
    struct __compressed_pair<firebase::firestore::util::Status::State *, std::__1::default_delete<firebase::firestore::util::Status::State>> {
        struct State *_field1;
    } _field1;
};

struct unique_ptr<leveldb::DB, std::__1::default_delete<leveldb::DB>> {
    struct __compressed_pair<leveldb::DB *, std::__1::default_delete<leveldb::DB>> {
        struct DB *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<int, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>>, std::__1::default_delete<std::__1::unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>>>> {
    struct __compressed_pair<std::__1::unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>>*, std::__1::default_delete<std::__1::unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>>>> {
        struct unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>> *__value_;
    } __ptr_;
};

struct unordered_map<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*, firebase::firestore::auth::HashUser, std::__1::equal_to<firebase::firestore::auth::User>, std::__1::allocator<std::__1::pair<const firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, firebase::firestore::auth::HashUser, true>, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, std::__1::equal_to<firebase::firestore::auth::User>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, firebase::firestore::auth::HashUser, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, NSMutableDictionary<NSNumber *, void (^)(NSError *)>*>, std::__1::equal_to<firebase::firestore::auth::User>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>, firebase::firestore::auth::HashUser, std::__1::equal_to<firebase::firestore::auth::User>, std::__1::allocator<std::__1::pair<const firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, firebase::firestore::auth::HashUser, true>, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::equal_to<firebase::firestore::auth::User>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, firebase::firestore::auth::HashUser, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::equal_to<firebase::firestore::auth::User>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<firebase::firestore::core::Query, FSTQueryView *, std::__1::hash<firebase::firestore::core::Query>, std::__1::equal_to<firebase::firestore::core::Query>, std::__1::allocator<std::__1::pair<const firebase::firestore::core::Query, FSTQueryView *>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, std::__1::__unordered_map_hasher<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, std::__1::hash<firebase::firestore::core::Query>, true>, std::__1::__unordered_map_equal<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, std::__1::equal_to<firebase::firestore::core::Query>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, std::__1::hash<firebase::firestore::core::Query>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, FSTQueryView *>, std::__1::equal_to<firebase::firestore::core::Query>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<firebase::firestore::core::Query, firebase::firestore::local::QueryData, std::__1::hash<firebase::firestore::core::Query>, std::__1::equal_to<firebase::firestore::core::Query>, std::__1::allocator<std::__1::pair<const firebase::firestore::core::Query, firebase::firestore::local::QueryData>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, std::__1::__unordered_map_hasher<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, std::__1::hash<firebase::firestore::core::Query>, true>, std::__1::__unordered_map_equal<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, std::__1::equal_to<firebase::firestore::core::Query>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, std::__1::hash<firebase::firestore::core::Query>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::core::Query, std::__1::__hash_value_type<firebase::firestore::core::Query, firebase::firestore::local::QueryData>, std::__1::equal_to<firebase::firestore::core::Query>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, firebase::firestore::model::DocumentKeyHash, true>, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, firebase::firestore::model::DocumentKeyHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, firebase::firestore::model::DocumentKeyHash, true>, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, firebase::firestore::model::DocumentKeyHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, firebase::firestore::model::SnapshotVersion>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<firebase::firestore::model::DocumentKey, long long, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, long long>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, firebase::firestore::model::DocumentKeyHash, true>, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, firebase::firestore::model::DocumentKeyHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::model::DocumentKey, std::__1::__hash_value_type<firebase::firestore::model::DocumentKey, long long>, std::__1::equal_to<firebase::firestore::model::DocumentKey>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, FSTQueryView *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, FSTQueryView *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, FSTQueryView *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, FSTQueryView *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, FSTQueryView *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, FSTQueryView *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, FSTQueryView *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, FSTQueryView *>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, FSTQueryView *>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, firebase::firestore::local::QueryData, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, firebase::firestore::local::QueryData>>> {
    struct __hash_table<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, firebase::firestore::local::QueryData>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, firebase::firestore::remote::TargetChange, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, firebase::firestore::remote::TargetChange>>> {
    struct __hash_table<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, firebase::firestore::remote::TargetChange>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::function<void (firebase::firestore::util::Status)>, std::__1::allocator<std::__1::function<void (firebase::firestore::util::Status)>>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::set<firebase::firestore::model::ResourcePath, std::__1::less<firebase::firestore::model::ResourcePath>, std::__1::allocator<firebase::firestore::model::ResourcePath>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<firebase::firestore::model::DocumentKey, firebase::firestore::model::DocumentKeyHash, std::__1::equal_to<firebase::firestore::model::DocumentKey>, std::__1::allocator<firebase::firestore::model::DocumentKey>>;

struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
    struct __hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>, std::__1::allocator<std::__1::__hash_node<int, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<int, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<int>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<int>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__value_;
    } __end_cap_;
};

struct vector<firebase::firestore::core::DocumentViewChange, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> {
    struct DocumentViewChange *__begin_;
    struct DocumentViewChange *__end_;
    struct __compressed_pair<firebase::firestore::core::DocumentViewChange *, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> {
        struct DocumentViewChange *__value_;
    } __end_cap_;
};

struct vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>;

struct vector<firebase::firestore::core::LimboDocumentChange, std::__1::allocator<firebase::firestore::core::LimboDocumentChange>> {
    struct LimboDocumentChange *_field1;
    struct LimboDocumentChange *_field2;
    struct __compressed_pair<firebase::firestore::core::LimboDocumentChange *, std::__1::allocator<firebase::firestore::core::LimboDocumentChange>> {
        struct LimboDocumentChange *_field1;
    } _field3;
};

struct vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>;

struct vector<firebase::firestore::local::LocalViewChanges, std::__1::allocator<firebase::firestore::local::LocalViewChanges>> {
    struct LocalViewChanges *_field1;
    struct LocalViewChanges *_field2;
    struct __compressed_pair<firebase::firestore::local::LocalViewChanges *, std::__1::allocator<firebase::firestore::local::LocalViewChanges>> {
        struct LocalViewChanges *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::FieldTransform, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
    struct FieldTransform *_field1;
    struct FieldTransform *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldTransform *, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
        struct FieldTransform *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>> {
    struct FieldValue *_field1;
    struct FieldValue *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldValue *, std::__1::allocator<firebase::firestore::model::FieldValue>> {
        struct FieldValue *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> {
    struct Mutation *__begin_;
    struct Mutation *__end_;
    struct __compressed_pair<firebase::firestore::model::Mutation *, std::__1::allocator<firebase::firestore::model::Mutation>> {
        struct Mutation *__value_;
    } __end_cap_;
};

struct vector<firebase::firestore::model::MutationBatch, std::__1::allocator<firebase::firestore::model::MutationBatch>> {
    struct MutationBatch *_field1;
    struct MutationBatch *_field2;
    struct __compressed_pair<firebase::firestore::model::MutationBatch *, std::__1::allocator<firebase::firestore::model::MutationBatch>> {
        struct MutationBatch *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::MutationResult, std::__1::allocator<firebase::firestore::model::MutationResult>> {
    struct MutationResult *_field1;
    struct MutationResult *_field2;
    struct __compressed_pair<firebase::firestore::model::MutationResult *, std::__1::allocator<firebase::firestore::model::MutationResult>> {
        struct MutationResult *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<double, double>, std::__1::allocator<std::__1::pair<double, double>>> {
    struct pair<double, double> *__begin_;
    struct pair<double, double> *__end_;
    struct __compressed_pair<std::__1::pair<double, double>*, std::__1::allocator<std::__1::pair<double, double>>> {
        struct pair<double, double> *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct weak_ptr<firebase::firestore::core::AsyncEventListener<firebase::firestore::core::ViewSnapshot>> {
    struct AsyncEventListener<firebase::firestore::core::ViewSnapshot> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<firebase::firestore::core::QueryListener> {
    struct QueryListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct ResourcePath path_;
    struct shared_ptr<const std::__1::basic_string<char>> collection_group_;
    AppendOnlyList_50725817 filters_;
    AppendOnlyList_9597473c explicit_order_bys_;
    AppendOnlyList_9597473c memoized_order_bys_;
    int limit_;
    shared_ptr_1d749e41 start_at_;
    shared_ptr_1d749e41 end_at_;
    basic_string_90719d97 canonical_id_;
} Query_9db663f1;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
} CDStruct_9167247c;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    unsigned int _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    Class _field10;
    _Bool _field11;
    _Bool _field12;
} CDStruct_b6254f9e;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
} CDStruct_9d607ac6;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
} CDStruct_4bf883ae;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct CDStruct_183601bc;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        int _field13;
        int _field14;
    } _field10;
} CDStruct_d1583d57;

// Template types
typedef struct AppendOnlyList<firebase::firestore::core::Filter> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> contents_;
    unsigned long long size_;
} AppendOnlyList_50725817;

typedef struct AppendOnlyList<firebase::firestore::core::OrderBy> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> contents_;
    unsigned long long size_;
} AppendOnlyList_9597473c;

typedef struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> array_;
        struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> tree_;
    } ;
} SortedMap_4bc8f18e;

typedef struct SortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    int _field1;
    union {
        struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field1;
        struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field2;
    } _field2;
} SortedMap_50e2822c;

typedef struct SortedSet<firebase::firestore::model::DocumentKey, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>, firebase::firestore::immutable::impl::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>>> {
    struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::immutable::impl::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> map_;
} SortedSet_8472c2f7;

typedef struct StatusOr<std::__1::unique_ptr<leveldb::DB, std::__1::default_delete<leveldb::DB>>> {
    union {
        struct Status _field1;
    } _field1;
    union {
        struct Dummy _field1;
        unique_ptr_b0135d45 _field2;
    } _field2;
} StatusOr_cee8aa85;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct function<void (const firebase::firestore::model::DocumentKey &, long long)> {
    struct type _field1;
    struct __base<void (const firebase::firestore::model::DocumentKey &, long long)> *_field2;
} function_9a8728a7;

typedef struct function<void (firebase::firestore::util::Status)> {
    struct type _field1;
    struct __base<void (firebase::firestore::util::Status)> *_field2;
} function_f1214db1;

typedef struct function<void (firebase::firestore::util::StatusOr<absl::any>)> {
    struct type _field1;
    struct __base<void (firebase::firestore::util::StatusOr<absl::any>)> *_field2;
} function_10d5c2f3;

typedef struct function<void (std::__1::shared_ptr<firebase::firestore::core::Transaction>, std::__1::function<void (firebase::firestore::util::StatusOr<absl::any>)>)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<firebase::firestore::core::Transaction>, std::__1::function<void (firebase::firestore::util::StatusOr<absl::any>)>)> *_field2;
} function_84151aa3;

typedef struct map<firebase::firestore::model::DocumentKey, int, std::__1::less<firebase::firestore::model::DocumentKey>, std::__1::allocator<std::__1::pair<const firebase::firestore::model::DocumentKey, int>>> {
    struct __tree<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::__map_value_compare<firebase::firestore::model::DocumentKey, std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::less<firebase::firestore::model::DocumentKey>, true>, std::__1::allocator<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<firebase::firestore::model::DocumentKey, std::__1::__value_type<firebase::firestore::model::DocumentKey, int>, std::__1::less<firebase::firestore::model::DocumentKey>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_947aefb7;

typedef struct optional<firebase::firestore::model::Document> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct Document data_;
    } ;
} optional_0ae1c4d0;

typedef struct optional<firebase::firestore::model::FieldValue> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct FieldValue _field2;
    } _field2;
} optional_0d4b65d9;

typedef struct optional<firebase::firestore::model::MaybeDocument> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct MaybeDocument _field2;
    } _field2;
} optional_da0b7706;

typedef struct optional<firebase::firestore::model::MutationBatch> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct MutationBatch _field2;
    } _field2;
} optional_976868b1;

typedef struct optional<firebase::firestore::remote::RemoteEvent> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RemoteEvent _field2;
    } _field2;
} optional_088ebe99;

typedef struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_0cfa92bf;

typedef struct shared_ptr<firebase::firestore::api::Firestore> {
    struct Firestore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e3fec009;

typedef struct shared_ptr<firebase::firestore::auth::CredentialsProvider> {
    struct CredentialsProvider *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_80c12b7c;

typedef struct shared_ptr<firebase::firestore::core::Bound> {
    struct Bound *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1d749e41;

typedef struct shared_ptr<firebase::firestore::core::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1e1d82c1;

typedef struct shared_ptr<firebase::firestore::util::AsyncQueue> {
    struct AsyncQueue *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ada94aa4;

typedef struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
        struct EventListener<firebase::firestore::api::DocumentSnapshot> *_field1;
    } _field1;
} unique_ptr_c03f27e0;

typedef struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
        struct EventListener<firebase::firestore::api::QuerySnapshot> *_field1;
    } _field1;
} unique_ptr_59522b24;

typedef struct unique_ptr<firebase::firestore::remote::WatchChange, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
    struct __compressed_pair<firebase::firestore::remote::WatchChange *, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
        struct WatchChange *_field1;
    } _field1;
} unique_ptr_3a773cf6;

typedef struct unique_ptr<leveldb::DB, std::__1::default_delete<leveldb::DB>> {
    struct __compressed_pair<leveldb::DB *, std::__1::default_delete<leveldb::DB>> {
        struct DB *__value_;
    } __ptr_;
} unique_ptr_b0135d45;

typedef struct unordered_map<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>, firebase::firestore::auth::HashUser, std::__1::equal_to<firebase::firestore::auth::User>, std::__1::allocator<std::__1::pair<const firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>>> {
    struct __hash_table<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, firebase::firestore::auth::HashUser, true>, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::equal_to<firebase::firestore::auth::User>, true>, std::__1::allocator<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, firebase::firestore::auth::HashUser, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<firebase::firestore::auth::User, std::__1::__hash_value_type<firebase::firestore::auth::User, std::__1::unique_ptr<firebase::firestore::local::MemoryMutationQueue, std::__1::default_delete<firebase::firestore::local::MemoryMutationQueue>>>, std::__1::equal_to<firebase::firestore::auth::User>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_9e1c1e20;

typedef struct vector<firebase::firestore::core::LimboDocumentChange, std::__1::allocator<firebase::firestore::core::LimboDocumentChange>> {
    struct LimboDocumentChange *_field1;
    struct LimboDocumentChange *_field2;
    struct __compressed_pair<firebase::firestore::core::LimboDocumentChange *, std::__1::allocator<firebase::firestore::core::LimboDocumentChange>> {
        struct LimboDocumentChange *_field1;
    } _field3;
} vector_2b4e01ff;

typedef struct vector<firebase::firestore::local::LocalViewChanges, std::__1::allocator<firebase::firestore::local::LocalViewChanges>> {
    struct LocalViewChanges *_field1;
    struct LocalViewChanges *_field2;
    struct __compressed_pair<firebase::firestore::local::LocalViewChanges *, std::__1::allocator<firebase::firestore::local::LocalViewChanges>> {
        struct LocalViewChanges *_field1;
    } _field3;
} vector_c8ba1e59;

typedef struct vector<firebase::firestore::model::FieldTransform, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
    struct FieldTransform *_field1;
    struct FieldTransform *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldTransform *, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
        struct FieldTransform *_field1;
    } _field3;
} vector_974658d4;

typedef struct vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>> {
    struct FieldValue *_field1;
    struct FieldValue *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldValue *, std::__1::allocator<firebase::firestore::model::FieldValue>> {
        struct FieldValue *_field1;
    } _field3;
} vector_51b5b3c0;

typedef struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> {
    struct Mutation *__begin_;
    struct Mutation *__end_;
    struct __compressed_pair<firebase::firestore::model::Mutation *, std::__1::allocator<firebase::firestore::model::Mutation>> {
        struct Mutation *__value_;
    } __end_cap_;
} vector_ea6b9d7e;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<std::__1::pair<double, double>, std::__1::allocator<std::__1::pair<double, double>>> {
    struct pair<double, double> *__begin_;
    struct pair<double, double> *__end_;
    struct __compressed_pair<std::__1::pair<double, double>*, std::__1::allocator<std::__1::pair<double, double>>> {
        struct pair<double, double> *__value_;
    } __end_cap_;
} vector_63c28b85;

